{
  "swagger": "2.0",
  "info": {
    "description": "",
    "version": "0.0.1",
    "title": "GIT Blockchain Api"
  },
  "host": "127.0.0.1:5500",
  "basePath": "/",
  "schemes": [
    "http",
    "https"
  ],
  "paths": {
    "/btc/createwallet": {
      "post": {
        "tags": [
          "Bitcoin"
        ],
        "summary": "Create a new bitcoin wallet",
        "description": "",
        "operationId": "createbtcWallet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/createwallets"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/btc/accountbalance/{uuid}": {
      "get": {
        "tags": [
          "Bitcoin"
        ],
        "summary": "Get a current bitcoin balance for a specific user",
        "description": "",
        "operationId": "getbtcBalance",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/accountbalance"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/btc/wallet/getaddress": {
      "get": {
        "tags": [
          "Bitcoin"
        ],
        "summary": "Get a current bitcoin address for a specific user",
        "description": "",
        "operationId": "getbtcAddress",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/walletaddress"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/btc/estimatefees": {
      "post": {
        "tags": [
          "Bitcoin"
        ],
        "summary": "send a transaction for get the transaction fee",
        "description": "For this endpoint you need to give the bitcoin address of recipient",
        "operationId": "estimategasbtc1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "user wallet address",
            "required": true,
            "type": "string",
            "example": "0x.."
          },
          {
            "name": "value",
            "in": "query",
            "description": "amount of transaction",
            "required": true,
            "type": "string"
          },
          {
            "name": "fees_type",
            "in": "query",
            "description": "type of fees",
            "required": true,
            "type": "string",
            "example": "Withdraw or send"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/estimatefees"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/btc/sendtransaction/{txtype}": {
      "post": {
        "tags": [
          "Bitcoin"
        ],
        "summary": "send a transaction from a user to another user out or in the platform",
        "description": "For this endpoint you need to give the bitcoin address of recipient",
        "operationId": "sendbtcTransaction1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "txtype",
            "in": "path",
            "description": "The transaction Type",
            "required": true,
            "type": "string",
            "example": "3 possible values:'received','send','withdraw'"
          },
          {
            "name": "to",
            "in": "query",
            "description": "user wallet address",
            "required": true,
            "type": "string",
            "example": "0x.."
          },
          {
            "name": "value",
            "in": "query",
            "description": "amount of transaction",
            "required": true,
            "type": "string"
          },
          {
            "name": "txfee",
            "in": "query",
            "description": "fees of transaction",
            "required": true,
            "type": "string"
          },
          {
            "name": "companyfee",
            "in": "query",
            "description": "company fees of transaction",
            "required": true,
            "type": "string"
          },
          {
            "name": "momo_method",
            "in": "query",
            "description": "the mobile money method the user choose - Only if the tx_type = withdraw",
            "required": false,
            "type": "string"
          },
          {
            "name": "currency",
            "in": "query",
            "description": "currency of country the user choose - Only if the tx_type = withdraw",
            "required": false,
            "type": "string"
          },
          {
            "name": "country",
            "in": "query",
            "description": "country the user choose - Only if the tx_type = withdraw",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/transaction"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/eth/createwallet": {
      "post": {
        "tags": [
          "Ethereum"
        ],
        "summary": "Create a new ethereum wallet",
        "description": "",
        "operationId": "createethWallet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/createwallets"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/eth/accountbalance/{uuid}": {
      "get": {
        "tags": [
          "Ethereum"
        ],
        "summary": "Get a current ethereum balance for a specific user",
        "description": "",
        "operationId": "getethBalance",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/accountbalance"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/eth/wallet/getaddress": {
      "get": {
        "tags": [
          "Ethereum"
        ],
        "summary": "Get a current ethereum address for a specific user",
        "description": "",
        "operationId": "getethAddress",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/walletaddress"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/eth/sendtransaction/{txtype}": {
      "post": {
        "tags": [
          "Ethereum"
        ],
        "summary": "send a transaction from a user to another user out or in the platform",
        "description": "For this endpoint you need to give the ethereum address of recipient",
        "operationId": "sendethTransaction1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "txtype",
            "in": "path",
            "description": "The transaction Type",
            "required": true,
            "type": "string",
            "example": "3 possible values:'received','send','withdraw'"
          },
          {
            "name": "to",
            "in": "query",
            "description": "user wallet address",
            "required": true,
            "type": "string",
            "example": "0x.."
          },
          {
            "name": "value",
            "in": "query",
            "description": "amount of transaction",
            "required": true,
            "type": "string"
          },
          {
            "name": "txfee",
            "in": "query",
            "description": "fees of transaction",
            "required": true,
            "type": "string"
          },
          {
            "name": "companyfee",
            "in": "query",
            "description": "company fees of transaction",
            "required": true,
            "type": "string"
          },
          {
            "name": "momo_method",
            "in": "query",
            "description": "the mobile money method the user choose - Only if the tx_type = withdraw",
            "required": false,
            "type": "string"
          },
          {
            "name": "currency",
            "in": "query",
            "description": "currency of country the user choose - Only if the tx_type = withdraw",
            "required": false,
            "type": "string"
          },
          {
            "name": "country",
            "in": "query",
            "description": "country the user choose - Only if the tx_type = withdraw",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/transaction"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/eth/estimatefees": {
      "post": {
        "tags": [
          "Ethereum"
        ],
        "summary": "send a transaction for get the transaction fee",
        "description": "For this endpoint you need to give the ethereum address of recipient",
        "operationId": "estimategaseth1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "user wallet address",
            "required": true,
            "type": "string",
            "example": "0x.."
          },
          {
            "name": "value",
            "in": "query",
            "description": "amount of transaction",
            "required": true,
            "type": "string"
          },
          {
            "name": "fees_type",
            "in": "query",
            "description": "type of fees",
            "required": true,
            "type": "string",
            "example": "Withdraw or send"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/estimatefees"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/{token_symbol}/createwallet": {
      "post": {
        "tags": [
          "ETHEREUM TOKENS"
        ],
        "summary": "Create a new token wallet",
        "description": "",
        "operationId": "createsmbWallet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "token_symbol",
            "in": "path",
            "description": "token symbol you need to be add in the path",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/createwallets"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/{token_symbol}/accountbalance/{uuid}": {
      "get": {
        "tags": [
          "ETHEREUM TOKENS"
        ],
        "summary": "Get a current token balance for a specific user",
        "description": "",
        "operationId": "gettokenBalance",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "token_symbol",
            "in": "path",
            "description": "token symbol you need to be add in the path",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/accountbalance"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/{token_symbol}/wallet/getaddress": {
      "get": {
        "tags": [
          "ETHEREUM TOKENS"
        ],
        "summary": "Get a current token address for a specific user",
        "description": "",
        "operationId": "getsmbAddress",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "token_symbol",
            "in": "path",
            "description": "token symbol you need to be add in the path",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/walletaddress"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/{token_symbol}/sendtransaction/{txtype}": {
      "post": {
        "tags": [
          "ETHEREUM TOKENS"
        ],
        "summary": "send a transaction from a user to another user out or in the platform",
        "description": "For this endpoint you need to give the token address of recipient",
        "operationId": "sendtokenTransaction1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "token_symbol",
            "in": "path",
            "description": "token symbol you need to be add in the path",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "txtype",
            "in": "path",
            "description": "The transaction Type",
            "required": true,
            "type": "string",
            "example": "3 possible values:'received','send','withdraw'"
          },
          {
            "name": "to",
            "in": "query",
            "description": "user wallet address",
            "required": true,
            "type": "string",
            "example": "0x.."
          },
          {
            "name": "value",
            "in": "query",
            "description": "amount of transaction",
            "required": true,
            "type": "string"
          },
          {
            "name": "txfee",
            "in": "query",
            "description": "fees of transaction",
            "required": true,
            "type": "string"
          },
          {
            "name": "companyfee",
            "in": "query",
            "description": "company fees of transaction",
            "required": true,
            "type": "string"
          },
          {
            "name": "momo_method",
            "in": "query",
            "description": "the mobile money method the user choose - Only if the tx_type = withdraw",
            "required": false,
            "type": "string"
          },
          {
            "name": "currency",
            "in": "query",
            "description": "currency of country the user choose - Only if the tx_type = withdraw",
            "required": false,
            "type": "string"
          },
          {
            "name": "country",
            "in": "query",
            "description": "country the user choose - Only if the tx_type = withdraw",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/transaction"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/{token_symbol}/estimatefees": {
      "post": {
        "tags": [
          "ETHEREUM TOKENS"
        ],
        "summary": "send a transaction for get the transaction fee",
        "description": "For this endpoint you need to give the simbcoin address of recipient",
        "operationId": "estimategassmb1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "token_symbol",
            "in": "path",
            "description": "token symbol you need to be add in the path",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "user wallet address",
            "required": true,
            "type": "string",
            "example": "0x.."
          },
          {
            "name": "value",
            "in": "query",
            "description": "amount of transaction",
            "required": true,
            "type": "string"
          },
          {
            "name": "fees_type",
            "in": "query",
            "description": "type of fees",
            "required": true,
            "type": "string",
            "example": "Withdraw or send"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/estimatefees"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/tx/getalltransaction": {
      "get": {
        "tags": [
          "Universal Transactions Endpoint"
        ],
        "summary": "Get all transaction for a specific user",
        "description": "",
        "operationId": "gettxall",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/alltransaction"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/tx/getalltx": {
      "get": {
        "tags": [
          "Universal Transactions Endpoint",
          "Dashboard Endpoint"
        ],
        "summary": "Get all transaction",
        "description": "",
        "operationId": "gettxalltx",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "useradmin uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/alltransaction"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/tx/getalltxnumber": {
      "get": {
        "tags": [
          "Universal Transactions Endpoint",
          "Dashboard Endpoint"
        ],
        "summary": "Get all transaction number",
        "description": "",
        "operationId": "gettxalltxnumber",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "useradmin uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/txnumber"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/createfees/withdraw": {
      "post": {
        "tags": [
          "Fees Managment Withdraw",
          "Dashboard Endpoint"
        ],
        "summary": "Add company fees for withdraw requests",
        "description": "",
        "operationId": "createfee1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "fastplus",
            "in": "query",
            "description": "Fastplus for send transaction rapidly+",
            "required": true,
            "type": "string"
          },
          {
            "name": "fast",
            "in": "query",
            "description": "Fast for send transaction rapidly",
            "required": true,
            "type": "string"
          },
          {
            "name": "medium",
            "in": "query",
            "description": "medium for send transaction little be fast",
            "required": true,
            "type": "string"
          },
          {
            "name": "normal",
            "in": "query",
            "description": "normal for send transaction normaly",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/feemanagment"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/allfees/withdraw/{uuid}": {
      "get": {
        "tags": [
          "Fees Managment Withdraw",
          "Dashboard Endpoint"
        ],
        "summary": "get all company fees percent for withdraw requests",
        "description": "",
        "operationId": "allfee1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/feemanagment"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/updatefees/withdraw": {
      "put": {
        "tags": [
          "Fees Managment Withdraw",
          "Dashboard Endpoint"
        ],
        "summary": "update company fees percent for withdraw requests",
        "description": "",
        "operationId": "updatefee1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "fastplus",
            "in": "query",
            "description": "Fastplus for send transaction rapidly+",
            "type": "string"
          },
          {
            "name": "fast",
            "in": "query",
            "description": "Fast for send transaction rapidly",
            "type": "string"
          },
          {
            "name": "medium",
            "in": "query",
            "description": "medium for send transaction little be fast",
            "type": "string"
          },
          {
            "name": "normal",
            "in": "query",
            "description": "normal for send transaction normaly",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/feemanagment"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/createfees/sendtransaction": {
      "post": {
        "tags": [
          "Fees Managment send transaction",
          "Dashboard Endpoint"
        ],
        "summary": "Add company fees for send transaction requests",
        "description": "",
        "operationId": "createfee2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "fastplus",
            "in": "query",
            "description": "Fastplus for send transaction rapidly+",
            "required": true,
            "type": "string"
          },
          {
            "name": "fast",
            "in": "query",
            "description": "Fast for send transaction rapidly",
            "required": true,
            "type": "string"
          },
          {
            "name": "medium",
            "in": "query",
            "description": "medium for send transaction little be fast",
            "required": true,
            "type": "string"
          },
          {
            "name": "normal",
            "in": "query",
            "description": "normal for send transaction normaly",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/feemanagment"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/allfees/sendtransaction/{uuid}": {
      "get": {
        "tags": [
          "Fees Managment send transaction",
          "Dashboard Endpoint"
        ],
        "summary": "get all company fees percent for send transaction requests",
        "description": "",
        "operationId": "allfee2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/feemanagment"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/updatefees/sendtransaction": {
      "put": {
        "tags": [
          "Fees Managment send transaction",
          "Dashboard Endpoint"
        ],
        "summary": "update company fees percent for send transaction requests",
        "description": "",
        "operationId": "updatefee2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "fastplus",
            "in": "query",
            "description": "Fastplus for send transaction rapidly+",
            "type": "string"
          },
          {
            "name": "fast",
            "in": "query",
            "description": "Fast for send transaction rapidly",
            "type": "string"
          },
          {
            "name": "medium",
            "in": "query",
            "description": "medium for send transaction little be fast",
            "type": "string"
          },
          {
            "name": "normal",
            "in": "query",
            "description": "normal for send transaction normaly",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/feemanagment"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/company/getallfees": {
      "get": {
        "tags": [
          "Fees Managment Withdraw",
          "Dashboard Endpoint"
        ],
        "summary": "Get all company fees collect",
        "description": "",
        "operationId": "companysfee1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/companyallfee"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/crypto/allcrypto/tokens": {
      "get": {
        "tags": [
          "Dashboard Endpoint",
          "ETHEREUM TOKENS",
          "Crypto Managment"
        ],
        "summary": "Get all crypto (tokens) available on this platform",
        "description": "",
        "operationId": "allcrypto2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/allcrypto"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/crypto/allcrypto/coins": {
      "get": {
        "tags": [
          "Dashboard Endpoint",
          "COINS",
          "Crypto Managment"
        ],
        "summary": "Get all crypto (coins) available on this platform",
        "description": "",
        "operationId": "allcrypto3",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/allcrypto"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/crypto/allcrypto": {
      "get": {
        "tags": [
          "Dashboard Endpoint",
          "Crypto Managment"
        ],
        "summary": "Get all cryptos available on this platform",
        "description": "",
        "operationId": "allcrypto0",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/allcrypto"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/crypto/add/crypto": {
      "post": {
        "tags": [
          "Dashboard Endpoint",
          "Crypto Managment"
        ],
        "summary": "Add a new crypto on the platform",
        "description": "",
        "operationId": "AddCrypto1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body for you query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/addcrypto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/allcrypto"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/crypto/update/crypto": {
      "put": {
        "tags": [
          "Dashboard Endpoint",
          "Crypto Managment"
        ],
        "summary": "update a crypto on the platform",
        "description": "",
        "operationId": "UpdateCrypto1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body for you query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/addcrypto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/allcrypto"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/momo/convert/{operation}/{currency}": {
      "get": {
        "tags": [
          "MOMO Endpoint"
        ],
        "summary": "Convert usd value to a local currency value",
        "description": "",
        "operationId": "convert1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "currency",
            "in": "path",
            "description": "This is the local currency symbol you want to get",
            "required": true,
            "type": "string"
          },
          {
            "name": "operation",
            "in": "path",
            "description": "if you want to sell or buy, two possible value: buy,sell",
            "required": true,
            "type": "string"
          },
          {
            "name": "value_usd",
            "in": "query",
            "description": "This is the dollar value you want to convert in local currency",
            "type": "double"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/convert"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/momo/getpayment/methods": {
      "get": {
        "tags": [
          "MOMO Endpoint"
        ],
        "summary": "get all payment methods",
        "description": "",
        "operationId": "method1",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/method1"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/momo/payment/available/{country}": {
      "get": {
        "tags": [
          "MOMO Endpoint"
        ],
        "summary": "get payment method available for a country",
        "description": "",
        "operationId": "method2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "country",
            "in": "path",
            "description": "country for check payment method available",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/method2"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/momo/payment/buy/crypto": {
      "post": {
        "tags": [
          "MOMO Endpoint"
        ],
        "summary": "create buy cryto request for a specifique user and ",
        "description": "",
        "operationId": "buycrypto1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/buycrypto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/transaction"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/twilio/otp/request": {
      "get": {
        "tags": [
          "Twilio Endpoint"
        ],
        "summary": "Request for send OTP NUMBER",
        "description": "",
        "operationId": " twiliorequest",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "phone",
            "in": "query",
            "description": "You need to pass the phone number",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/twilio2"
              }
            }
          },
          "500": {
            "description": "Invalid status value",
            "schema": {
              "items": {
                "$ref": "#/definitions/twilioeror1"
              }
            }
          }
        }
      }
    },
    "/twilio/verify": {
      "get": {
        "tags": [
          "Twilio Endpoint"
        ],
        "summary": "Request for verify number",
        "description": "",
        "operationId": " twilioverify",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "You needs to pass the OTP code the user type.",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/twilio1"
              }
            }
          },
          "500": {
            "description": "Invalid status value",
            "schema": {
              "items": {
                "$ref": "#/definitions/twilioeror1"
              }
            }
          }
        }
      }
    },
    "/staking/create/stake": {
      "post": {
        "tags": [
          "Staking Endpoint"
        ],
        "summary": "add e request on the staking pool for a specific user",
        "description": "",
        "operationId": "createstake1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createstake"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/stake"
              }
            }
          },
          "500": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/staking/admin/get/stakeholders/{uuid}": {
      "get": {
        "tags": [
          "Staking Endpoint",
          "Dashboard Endpoint"
        ],
        "summary": "Get all stakeholders, Admin Only",
        "description": "",
        "operationId": "allstakes",
        "produces": [
          "application/json"
        ],
        "parameters": [
            {
              "name": "uuid",
              "in": "path",
              "description": "You needs to pass the user admin uuid",
              "required": true,
              "type": "string",
              "items": {
                "type": "string"
              }
            }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/getuserstake"
              }
            }
          },
          "500": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/staking/get/userstakes/{uuid}": {
      "get": {
        "tags": [
          "Staking Endpoint"
        ],
        "summary": "Get all user stakes",
        "description": "",
        "operationId": "userstakes1",
        "produces": [
          "application/json"
        ],
        "parameters": [
            {
              "name": "uuid",
              "in": "path",
              "description": "You needs to pass the user uuid",
              "required": true,
              "type": "string",
              "items": {
                "type": "string"
              }
            }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/getuserstake"
              }
            }
          },
          "500": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/staking/enable/autorenew": {
      "post": {
        "tags": [
          "Staking Endpoint"
        ],
        "summary": "enable auto renew setting for automatically reinvest an amount",
        "description": "",
        "operationId": "enabst1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/enable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/enableres"
              }
            }
          },
          "500": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/staking/disable/autorenew": {
      "post": {
        "tags": [
          "Staking Endpoint"
        ],
        "summary": "disable auto renew setting for automatically stop reinvest an amount",
        "description": "",
        "operationId": "disabst1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/enable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/enableres"
              }
            }
          },
          "500": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/app/get/version": {
      "get": {
        "tags": [
          "APP CONFIG"
        ],
        "summary": "Get all information of the app",
        "description": "",
        "operationId": "app12",
        "produces": [
          "application/json"
        ],
        "parameters": [
          
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/app"
              }
            }
          },
          "500": {
            "description": "Invalid status value",
            "schema": {
              "items": {
                "$ref": "#/definitions/twilioeror1"
              }
            }
          }
        }
      }
    },
    "/app/update/version": {
      "put": {
        "tags": [
          "APP CONFIG"
        ],
        "summary": "Update all information of the app",
        "description": "",
        "operationId": "appupdate1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body for you query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateapp"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/app"
              }
            }
          },
          "500": {
            "description": "Invalid status value",
            "schema": {
              "items": {
                "$ref": "#/definitions/twilioeror1"
              }
            }
          }
        }
      }
    },
    "/notification/user/create": {
      "post": {
        "tags": [
          "APP CONFIG"
        ],
        "summary": "create notification",
        "description": "",
        "operationId": "addnotification1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body for you query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/addnotif"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/notif"
              }
            }
          },
          "500": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/notification/all/create": {
      "post": {
        "tags": [
          "APP CONFIG"
        ],
        "summary": "create notification",
        "description": "",
        "operationId": "addnotification2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body for you query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/addnotif"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/notif"
              }
            }
          },
          "500": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/notification/user/getnotifs": {
      "get": {
        "tags": [
          "APP CONFIG"
        ],
        "summary": "get notification",
        "description": "",
        "operationId": "getnotification1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
              "in": "query",
              "description": "You needs to pass the user uuid",
              "required": true,
              "type": "string",
              "items": {
                "type": "string"
              }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/notif"
              }
            }
          },
          "500": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/notification/read": {
      "put": {
        "tags": [
          "APP CONFIG"
        ],
        "summary": "read notification",
        "description": "",
        "operationId": "readnotification1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
              "in": "query",
              "description": "You needs to pass the notif id",
              "required": true,
              "type": "integer",
              "items": {
                "type": "integer"
              }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/notif"
              }
            }
          },
          "500": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/notification/all/getallnotifs": {
      "get": {
        "tags": [
          "APP CONFIG"
        ],
        "summary": "get notification",
        "description": "",
        "operationId": "getnotification2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/notif"
              }
            }
          },
          "500": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/current/date": {
      "get": {
        "tags": [
          "APP CONFIG"
        ],
        "summary": "getcurrent date",
        "description": "",
        "operationId": "appdate",
        "produces": [
          "application/json"
        ],
        "parameters": [
          
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/date"
              }
            }
          },
          "500": {
            "description": "Invalid status value"
          }
        }
      }
    }
  },
  
  "definitions": {
    "createwallets": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": 200
        },
        "message": {
          "type": "string",
          "example": "successfully"
        },
        "wallet": {
          "type": "object",
          "example": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "crypto_name": {
              "type": "string",
              "example": "bitcoin"
            },
            "pubkey": {
              "type": "string",
              "example": "0x.."
            },
            "privkey": {
              "type": "string",
              "example": "0x.."
            },
            "mnemonic": {
              "type": "string",
              "example": "my me too"
            },
            "updatedAt": {
              "type": "datetime",
              "example": "2021-08-05T18:21:33.296Z"
            },
            "createdAt": {
              "type": "datetime",
              "example": "2021-08-05T18:21:33.296Z"
            }
          }
        }
      }
    },
    "walletaddress": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": "200"
        },
        "address": {
          "type": "string",
          "example": "0x.."
        }
      }
    },
    "addcrypto": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "example": "3434..."
        },
        "crypto_name": {
          "type": "string",
          "example": "bitcoin"
        },
        "crypto_symbol": {
          "type": "string",
          "example": "btc"
        },
        "contract_address": {
          "type": "string",
          "example": "0x..."
        },
        "contract_abi": {
          "type": "array",
          "example": []
        },
        "contract_address_test": {
          "type": "string",
          "example": "0x..."
        },
        "contract_abi_test": {
          "type": "array",
          "example": []
        },
        "amount_min": {
          "type": "double",
          "example": 0.01
        },
        "staking_amount_min": {
          "type": "double",
          "example": "0.01"
        },
        "days": {
          "type": "array",
          "example": [12,3,3]
        },
        "rates": {
          "type": "array",
          "example": [12,3,3]
        },
        "stakable": {
          "type": "boolean",
          "example": true
        },
        "crypto_type": {
          "type": "string",
          "example": "token/coin"
        },
        "crypto_name_market": {
          "type": "string",
          "example": "bitcoin"
        }
      }
    },
    "app": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": 200
        },
        "message":{
          "type": "string",
          "example" : "successfully"
        },
        "data":
        {
          "type":"object",
          "example": {
            "version": "v1"
          }
        }
      }
    },
    "updateapp": {
      "type": "object",
      "properties": {
        "version":
        {
          "type":"object",
          "example": "1"
        }
      }
    },
    "accountbalance": {
      "type": "object",
      "properties": {
        "balance": {
          "type": "double",
          "example": "0.004"
        }
      }
    },
    "sendtransaction": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": 200
        },
        "message": {
          "type": "string",
          "example": "successfully"
        }
      }
    },
    "alltransaction": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": 200
        },
        "message": {
          "type": "string",
          "example": "successfully"
        },
        "data": {
          "type": "array",
          "example": [
            {
              "id": 1,
              "crypto_name": "ethereum",
              "transaction_type": "send",
              "hash": "0x40eb1caad438fce5aec593864d04b25bc50f5623575f703075a5d54e1e22d30a",
              "amount": "0.01",
              "fees": 0.003356,
              "amount_usd": 34334,
              "fees_usd": 232,
              "amount_currency": 2323,
              "currency": "XAF",
              "country": "cameroun",
              "phone": "3478343444",
              "statuspayment": true,
              "paymentid" : "3434346rgvh34343rfsfef",
              "from": "0xaC5ab679D5aaC1d0c8C3f8168fBfeb15A3A7CcC5",
              "to": "0xcbe68f0486A369b37d99E4BEfF35B0Ca83062542",
              "confirmation": false,
              "user_uuid": "22aba468-294b-4b17-82be-e046187ae7e2",
              "updatedAt": "2021-11-19T20:43:33.618Z",
              "createdAt": "2021-11-19T20:43:33.618Z"
            }
          ]
        }
      }
    },
    "transaction": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": 200
        },
        "message": {
          "type": "string",
          "example": "successfully"
        },
        "data": {
          "type": "object",
          "example": {
            "id": 1,
            "crypto_name": "ethereum",
            "transaction_type": "send",
            "hash": "0x40eb1caad438fce5aec593864d04b25bc50f5623575f703075a5d54e1e22d30a",
            "amount": "0.01",
            "fees": 0.003356,
            "amount_usd": 34334,
            "fees_usd": 232,
            "amount_currency": 2323,
            "currency": "XAF",
            "country": "cameroun",
            "phone": "3478343444",
            "statuspayment": true,
            "paymentid" : "3434346rgvh34343rfsfef",
            "from": "0xaC5ab679D5aaC1d0c8C3f8168fBfeb15A3A7CcC5",
            "to": "0xcbe68f0486A369b37d99E4BEfF35B0Ca83062542",
            "confirmation": false,
            "user_uuid": "22aba468-294b-4b17-82be-e046187ae7e2",
            "updatedAt": "2021-11-19T20:43:33.618Z",
            "createdAt": "2021-11-19T20:43:33.618Z"
          }
        }
      }
    },
    "txnumber": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": 200
        },
        "message": {
          "type": "string",
          "example": "successfully"
        },
        "data": {
          "type": "integer",
          "example": {
            "txnumber": 221
          }
        }
      }
    },
    "feemanagment": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": 200
        },
        "message": {
          "type": "string",
          "example": "successfully"
        },
        "data": {
          "type": "object",
          "example": {
            "fees_type": {
              "type": "string",
              "example": "withdraw"
            },
            "fastplus": {
              "type": "string",
              "example": "0.23"
            },
            "fast": {
              "type": "string",
              "example": "0.12"
            },
            "medium": {
              "type": "string",
              "example": "0.01"
            },
            "normal": {
              "type": "string",
              "example": "0.012"
            },
            "updatedAt": {
              "type": "datetime",
              "example": "2021-08-05T18:21:33.296Z"
            },
            "createdAt": {
              "type": "datetime",
              "example": "2021-08-05T18:21:33.296Z"
            }
          }
        }
      }
    },
    "companyallfee": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": 200
        },
        "message": {
          "type": "string",
          "example": "successfully"
        },
        "data": {
          "type": "object",
          "example": {
            "bitcoin": {
              "btcfees": 0.01,
              "symbol": "BTC"
            },
            "ethereum": {
              "btcfees": 0.01,
              "symbol": "ETH"
            }
          }
        }
      }
    },
    "allcrypto": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": 200
        },
        "message": {
          "type": "string",
          "example": "successfully"
        },
        "data": {
          "type": "array",
          "example": {
            "id": 3,
            "crypto_name": "tether",
            "crypto_symbol": "usdt",
            "contract_address": "0xdac17f958d2ee523a2206206994597c13d831ec7",
            "contract_abi": [],
            "contract_address_test": "0xdac17f958d2ee523a2206206994597c13d831ec7",
            "contract_abi_test": [],
            "amount_min": 60,
            "staking_amount_min": null,
            "days" : [30,120,360],
            "rates": [15,18,26],
            "stakable": false,
            "crypto_type": "token/coin",
            "crypto_name_market": "tether",
            "createdAt": "2021-11-22T16:30:07.000Z",
            "updatedAt": "2021-11-22T16:30:07.000Z"
          }
        }
      }
    },
    "buycrypto": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "example": "3434..."
        },
        "crypto_name": {
          "type": "string",
          "example": "bitcoin"
        },
        "txfee": {
          "type": "double",
          "example": 0.08
        },
        "value": {
          "type": "string",
          "example": "267"
        },
        "amount_usd": {
          "type": "double",
          "example": 23.0
        },
        "amount_local": {
          "type": "double",
          "example": 22000.0
        },
        "momo_method": {
          "type": "string",
          "example": "CM_MTNMOBILEMONEY"
        },
        "currency": {
          "type": "string",
          "example": "XAF"
        },
        "country": {
          "type": "string",
          "example": "cameroun"
        },
        "phone": {
          "type": "string",
          "example": "365657677"
        }
      }
    },
    "estimatefees": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": 200
        },
        "message": {
          "type": "string",
          "example": "Fees Managment Get With Success"
        },
        "data": {
          "type": "object",
          "example": {
            "fastplus": {
              "type": "double",
              "example": 0.0233
            },
            "fast": {
              "type": "double",
              "example": 0.0013
            },
            "medium": {
              "type": "double",
              "example": 0.00013
            },
            "normal": {
              "type": "double",
              "example": 0.00010
            }
          }
        }
      }
    },
    "twilio1": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": 200
        },
        "message": {
          "type": "string",
          "example": "Verification done successfully!"
        }
      }
    },
    "convert": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": 200
        },
        "message": {
          "type": "string",
          "example": "all payment!"
        },
        "data": {
          "type": "object",
          "example": [
            {
              "currency": "XAF",
              "amount": 2310.4
            }
          ]
        }
      }
    },
    "method1": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": 200
        },
        "message": {
          "type": "string",
          "example": "all payment!"
        },
        "data": {
          "type": "array",
          "example": [
            {
              "id": 1,
              "country": "cameroun",
              "symbol": "CM",
              "currency": "XAF",
              "channel": [
                "CM_ORANGEMONEY",
                "CM_MTNMOBILEMONEY",
                "CM_EUMM"
              ],
              "available_buy":true,
              "available_withdraw":false,
              "operator": [
                "ORANGE MONEY",
                "MTN MOBILE MONEY",
                "EXPRESS UNION"
              ],
              "createdAt": "2021-11-19T11:50:01.000Z",
              "updatedAt": "2021-11-19T11:50:01.000Z"
            }
          ]
        }
      }
    },
    "method2": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": 200
        },
        "message": {
          "type": "string",
          "example": "all payment!"
        },
        "data": {
          "type": "object",
          "example": {
            "id": 1,
            "country": "cameroun",
            "symbol": "CM",
            "currency": "XAF",
            "channel": [
              "CM_ORANGEMONEY",
              "CM_MTNMOBILEMONEY",
              "CM_EUMM"
            ],
            "available_buy":true,
            "available_withdraw":false,
            "operator": [
              "ORANGE MONEY",
              "MTN MOBILE MONEY",
              "EXPRESS UNION"
            ],
            "createdAt": "2021-11-19T11:50:01.000Z",
            "updatedAt": "2021-11-19T11:50:01.000Z"
          }
        }
      }
    },
    "twilio2": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": 200
        },
        "code": {
          "type": "string",
          "example": "002001"
        },
        "message": {
          "type": "string",
          "example": "OTP code send successfully!"
        }
      }
    },
    "twilioeror1": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": 500
        },
        "message": {
          "type": "string",
          "example": "Openration Failed"
        }
      }
    },
    "createstake": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "example": "3434..."
        },
        "crypto_name": {
          "type": "string",
          "example": "bitcoin"
        },
        "amount_invest": {
          "type": "double",
          "example": 2
        },
        "day": {
          "type": "integer",
          "example": 30
        }
      }
    },
    "addnotif": {
      "type": "object",
      "properties": {
          "uuid": {
            "type": "string",
            "example": "3434..."
          },
          "title": {
            "type": "string",
            "example": "withdraw"
          },
          "message": {
            "type": "string",
            "example": "your withdraw request has been proccess very well thank you."
          },
          "read": {
            "type": "boolean",
            "example": "false"
          },
          "notification_type": {
            "type": "string",
            "example": "withdraw"
          }
      }
    },
    "notif": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": 200
        },
        "message": {
          "type": "string",
          "example": "success"
        },
        "data": {
          "type": "array",
          "example":
        [
            {
              "id": 2,
              "title": "withdraw",
              "message": "your withdraw request has been proccess very well thank you.",
              "read": false,
              "notification_type": "withdraw",
              "user_uuid": "",
              "createdAt": "2021-11-28T20:33:41.000Z",
              "updatedAt": "2021-11-28T20:33:41.000Z"
            }
          ]
        }
      }
    },
    "enable": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "example": "3434..."
          },
        "stake_id": {
          "type": "integer",
          "example": 30
        }
      }
    },
    "date": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": 34
          },
        "message":{ 
          "type": "integer",
          "example": 30
        },
        "data" :{
          "type" : "object",
          "example" : {
            "current_date" : "2021-12-27T00:46:40.759Z"
          }
        }
      }
    },
    "enableres": {
      "type": "object",
      "properties": {
        "auto_renew": {
          "type": "boolean",
          "example": true
        }
      }
    },
    "getuserstake": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": 200
        },
        "message": {
          "type": "string",
          "example": "successfully!"
        },
        "data" : {
          "type": "array",
          "example": [{
                "id": 27,
                "crypto_name": "ethereum",
                "start_time": "2021-11-26T13:34:43.000Z",
                "end_time": "2021-12-26T13:34:43.000Z",
                "fee_start": 0.000882,
                "fee_end": 0.000882,
                "amount_invest": 0.11,
                "amount_reward": 0.0275,
                "amount_reward_day": 0.0009166666666666666,
                "period": 30,
                "rate": 0.25,
                "start_status": true,
                "end_status": null,
                "amount_invest_return": null,
                "tx_stake_confirm": true,
                "auto_renew": true,
                "user_uuid": "22aba468-294b-4b17-82be-e046187ae7e2",
                "createdAt": "2021-11-26T13:34:44.000Z",
                "updatedAt": "2021-11-26T15:09:14.000Z"
          }]
        }
      }
    },
    "stake": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": 200
        },
        "message": {
          "type": "string",
          "example": "successfully!"
        },
        "data" : {
          "type": "object",
          "example": {
                "crypto_name": "ethereum",
                "user_uuid": "22aba468-294b-4b17-82be-e046187ae7e2",
                "amount_invest": 0.10001,
                "amount_reward": 0.0250025,
                "amount_reward_day": 0.0008334166666666667,
                "period": 30,
                "rate": 0.25,
                "start_status": true,
                "reward_return_status": false,
                "start_time": "2021-11-26T21:24:24.289Z",
                "end_time": "2021-12-26T21:24:24.289Z",
                "fee_start": 0.001008,
                "fee_end": 0.001008,
                "end_status": false,
                "auto_renew": false,
                "tx_stake_confirm": false
          }
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "#"
  }
}