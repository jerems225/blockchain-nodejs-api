{
  "swagger": "2.0",
  "info": {
    "description": "",
    "version": "0.0.1",
    "title": "GIT Blockchain Api"
  },
  "host": "127.0.0.1:5500",
  "basePath": "/",
  "schemes": [
    "http",
    "https"
  ],
  "paths": {
    "/btc/createwallet": {
      "post": {
        "tags": [
          "Bitcoin"
        ],
        "summary": "Create a new bitcoin wallet",
        "description": "",
        "operationId": "createbtcWallet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/createwallets"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/btc/accountbalance/{uuid}": {
      "get": {
        "tags": [
          "Bitcoin"
        ],
        "summary": "Get a current bitcoin balance for a specific user",
        "description": "",
        "operationId": "getbtcBalance",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/accountbalance"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/btc/wallet/getaddress": {
      "get": {
        "tags": [
          "Bitcoin"
        ],
        "summary": "Get a current bitcoin address for a specific user",
        "description": "",
        "operationId": "getbtcAddress",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/walletaddress"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/btc/estimatefees": {
      "post": {
        "tags": [
          "Bitcoin"
        ],
        "summary": "send a transaction for get the transaction fee",
        "description": "For this endpoint you need to give the bitcoin address of recipient",
        "operationId": "estimategasbtc1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "user wallet address",
            "required": true,
            "type": "string",
            "example": "0x.."
          },
          {
            "name": "value",
            "in": "query",
            "description": "amount of transaction",
            "required": true,
            "type": "string"
          },
          {
            "name": "fees_type",
            "in": "query",
            "description": "type of fees",
            "required": true,
            "type": "string",
            "example": "Withdraw or send"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/estimatefees"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/btc/sendtransaction/{txtype}": {
      "post": {
        "tags": [
          "Bitcoin"
        ],
        "summary": "send a transaction from a user to another user out or in the platform",
        "description": "For this endpoint you need to give the bitcoin address of recipient",
        "operationId": "sendbtcTransaction1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "txtype",
            "in": "path",
            "description": "The transaction Type",
            "required": true,
            "type": "string",
            "example": "3 possible values:'received','send','withdraw'"
          },
          {
            "name": "to",
            "in": "query",
            "description": "user wallet address",
            "required": true,
            "type": "string",
            "example": "0x.."
          },
          {
            "name": "value",
            "in": "query",
            "description": "amount of transaction",
            "required": true,
            "type": "string"
          },
          {
            "name": "txfee",
            "in": "query",
            "description": "fees of transaction",
            "required": true,
            "type": "string"
          },
          {
            "name": "companyfee",
            "in": "query",
            "description": "company fees of transaction",
            "required": true,
            "type": "string"
          },
          {
            "name": "momo_method",
            "in": "query",
            "description": "the mobile money method the user choose - Only if the tx_type = withdraw",
            "required": false,
            "type": "string"
          },
          {
            "name": "currency",
            "in": "query",
            "description": "currency of country the user choose - Only if the tx_type = withdraw",
            "required": false,
            "type": "string"
          },
          {
            "name": "country",
            "in": "query",
            "description": "country the user choose - Only if the tx_type = withdraw",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/transaction"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/eth/createwallet": {
      "post": {
        "tags": [
          "Ethereum"
        ],
        "summary": "Create a new ethereum wallet",
        "description": "",
        "operationId": "createethWallet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/createwallets"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/eth/accountbalance/{uuid}": {
      "get": {
        "tags": [
          "Ethereum"
        ],
        "summary": "Get a current ethereum balance for a specific user",
        "description": "",
        "operationId": "getethBalance",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/accountbalance"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/eth/wallet/getaddress": {
      "get": {
        "tags": [
          "Ethereum"
        ],
        "summary": "Get a current ethereum address for a specific user",
        "description": "",
        "operationId": "getethAddress",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/walletaddress"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/eth/sendtransaction/{txtype}": {
      "post": {
        "tags": [
          "Ethereum"
        ],
        "summary": "send a transaction from a user to another user out or in the platform",
        "description": "For this endpoint you need to give the ethereum address of recipient",
        "operationId": "sendethTransaction1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "txtype",
            "in": "path",
            "description": "The transaction Type",
            "required": true,
            "type": "string",
            "example": "3 possible values:'received','send','withdraw'"
          },
          {
            "name": "to",
            "in": "query",
            "description": "user wallet address",
            "required": true,
            "type": "string",
            "example": "0x.."
          },
          {
            "name": "value",
            "in": "query",
            "description": "amount of transaction",
            "required": true,
            "type": "string"
          },
          {
            "name": "txfee",
            "in": "query",
            "description": "fees of transaction",
            "required": true,
            "type": "string"
          },
          {
            "name": "companyfee",
            "in": "query",
            "description": "company fees of transaction",
            "required": true,
            "type": "string"
          },
          {
            "name": "momo_method",
            "in": "query",
            "description": "the mobile money method the user choose - Only if the tx_type = withdraw",
            "required": false,
            "type": "string"
          },
          {
            "name": "currency",
            "in": "query",
            "description": "currency of country the user choose - Only if the tx_type = withdraw",
            "required": false,
            "type": "string"
          },
          {
            "name": "country",
            "in": "query",
            "description": "country the user choose - Only if the tx_type = withdraw",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/transaction"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/eth/estimatefees": {
      "post": {
        "tags": [
          "Ethereum"
        ],
        "summary": "send a transaction for get the transaction fee",
        "description": "For this endpoint you need to give the ethereum address of recipient",
        "operationId": "estimategaseth1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "user wallet address",
            "required": true,
            "type": "string",
            "example": "0x.."
          },
          {
            "name": "value",
            "in": "query",
            "description": "amount of transaction",
            "required": true,
            "type": "string"
          },
          {
            "name": "fees_type",
            "in": "query",
            "description": "type of fees",
            "required": true,
            "type": "string",
            "example": "Withdraw or send"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/estimatefees"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/smb/createwallet": {
      "post": {
        "tags": [
          "Simbcoin"
        ],
        "summary": "Create a new simbcoin wallet",
        "description": "",
        "operationId": "createsmbWallet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/createwallets"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/smb/accountbalance/{uuid}": {
      "get": {
        "tags": [
          "Simbcoin"
        ],
        "summary": "Get a current simbcoin balance for a specific user",
        "description": "",
        "operationId": "getsmbBalance",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/accountbalance"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/smb/wallet/getaddress": {
      "get": {
        "tags": [
          "Simbcoin"
        ],
        "summary": "Get a current simbcoin address for a specific user",
        "description": "",
        "operationId": "getsmbAddress",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/walletaddress"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/smb/sendtransaction/{txtype}": {
      "post": {
        "tags": [
          "Simbcoin"
        ],
        "summary": "send a transaction from a user to another user out or in the platform",
        "description": "For this endpoint you need to give the simbcoin address of recipient",
        "operationId": "sendsmbTransaction1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "txtype",
            "in": "path",
            "description": "The transaction Type",
            "required": true,
            "type": "string",
            "example": "3 possible values:'received','send','withdraw'"
          },
          {
            "name": "to",
            "in": "query",
            "description": "user wallet address",
            "required": true,
            "type": "string",
            "example": "0x.."
          },
          {
            "name": "value",
            "in": "query",
            "description": "amount of transaction",
            "required": true,
            "type": "string"
          },
          {
            "name": "txfee",
            "in": "query",
            "description": "fees of transaction",
            "required": true,
            "type": "string"
          },
          {
            "name": "companyfee",
            "in": "query",
            "description": "company fees of transaction",
            "required": true,
            "type": "string"
          },
          {
            "name": "momo_method",
            "in": "query",
            "description": "the mobile money method the user choose - Only if the tx_type = withdraw",
            "required": false,
            "type": "string"
          },
          {
            "name": "currency",
            "in": "query",
            "description": "currency of country the user choose - Only if the tx_type = withdraw",
            "required": false,
            "type": "string"
          },
          {
            "name": "country",
            "in": "query",
            "description": "country the user choose - Only if the tx_type = withdraw",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/transaction"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/smb/estimatefees": {
      "post": {
        "tags": [
          "Simbcoin"
        ],
        "summary": "send a transaction for get the transaction fee",
        "description": "For this endpoint you need to give the simbcoin address of recipient",
        "operationId": "estimategassmb1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "user wallet address",
            "required": true,
            "type": "string",
            "example": "0x.."
          },
          {
            "name": "value",
            "in": "query",
            "description": "amount of transaction",
            "required": true,
            "type": "string"
          },
          {
            "name": "fees_type",
            "in": "query",
            "description": "type of fees",
            "required": true,
            "type": "string",
            "example": "Withdraw or send"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/estimatefees"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/usdt/createwallet": {
      "post": {
        "tags": [
          "Tether"
        ],
        "summary": "Create a new tether wallet",
        "description": "",
        "operationId": "createusdtWallet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/createwallets"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/usdt/accountbalance/{uuid}": {
      "get": {
        "tags": [
          "Tether"
        ],
        "summary": "Get a current tether balance for a specific user",
        "description": "",
        "operationId": "getusdtBalance",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/accountbalance"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/usdt/wallet/getaddress": {
      "get": {
        "tags": [
          "Tether"
        ],
        "summary": "Get a current tether address for a specific user",
        "description": "",
        "operationId": "getbtcAddress",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/walletaddress"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/usdt/sendtransaction/{txtype}": {
      "post": {
        "tags": [
          "Tether"
        ],
        "summary": "send a transaction from a user to another user out or in the platform",
        "description": "For this endpoint you need to give the tether address of recipient",
        "operationId": "sendusdtTransaction1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "txtype",
            "in": "path",
            "description": "The transaction Type",
            "required": true,
            "type": "string",
            "example": "3 possible values:'received','send','withdraw'"
          },
          {
            "name": "to",
            "in": "query",
            "description": "user wallet address",
            "required": true,
            "type": "string",
            "example": "0x.."
          },
          {
            "name": "value",
            "in": "query",
            "description": "amount of transaction",
            "required": true,
            "type": "string"
          },
          {
            "name": "txfee",
            "in": "query",
            "description": "fees of transaction",
            "required": true,
            "type": "string"
          },
          {
            "name": "companyfee",
            "in": "query",
            "description": "company fees of transaction",
            "required": true,
            "type": "string"
          },
          {
            "name": "momo_method",
            "in": "query",
            "description": "the mobile money method the user choose - Only if the tx_type = withdraw",
            "required": false,
            "type": "string"
          },
          {
            "name": "currency",
            "in": "query",
            "description": "currency of country the user choose - Only if the tx_type = withdraw",
            "required": false,
            "type": "string"
          },
          {
            "name": "country",
            "in": "query",
            "description": "country the user choose - Only if the tx_type = withdraw",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/transaction"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/usdt/estimatefees": {
      "post": {
        "tags": [
          "Tether"
        ],
        "summary": "send a transaction for get the transaction fee",
        "description": "For this endpoint you need to give the tether address of recipient",
        "operationId": "estimategasusdt1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "user wallet address",
            "required": true,
            "type": "string",
            "example": "0x.."
          },
          {
            "name": "value",
            "in": "query",
            "description": "amount of transaction",
            "required": true,
            "type": "string"
          },
          {
            "name": "fees_type",
            "in": "query",
            "description": "type of fees",
            "required": true,
            "type": "string",
            "example": "Withdraw or send"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/estimatefees"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/tx/getalltransaction": {
      "get": {
        "tags": [
          "Universal Transactions Endpoint"
        ],
        "summary": "Get all transaction for a specific user",
        "description": "",
        "operationId": "gettxall",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/alltransaction"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/tx/getalltx": {
      "get": {
        "tags": [
          "Universal Transactions Endpoint",
          "Dashboard Endpoint"
        ],
        "summary": "Get all transaction",
        "description": "",
        "operationId": "gettxalltx",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "useradmin uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/alltransaction"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/tx/getalltxnumber": {
      "get": {
        "tags": [
          "Universal Transactions Endpoint",
          "Dashboard Endpoint"
        ],
        "summary": "Get all transaction number",
        "description": "",
        "operationId": "gettxalltxnumber",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "useradmin uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/txnumber"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/createfees/withdraw": {
      "post": {
        "tags": [
          "Fees Managment Withdraw",
          "Dashboard Endpoint"
        ],
        "summary": "Add company fees for withdraw requests",
        "description": "",
        "operationId": "createfee1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "fastplus",
            "in": "query",
            "description": "Fastplus for send transaction rapidly+",
            "required": true,
            "type": "string"
          },
          {
            "name": "fast",
            "in": "query",
            "description": "Fast for send transaction rapidly",
            "required": true,
            "type": "string"
          },
          {
            "name": "medium",
            "in": "query",
            "description": "medium for send transaction little be fast",
            "required": true,
            "type": "string"
          },
          {
            "name": "normal",
            "in": "query",
            "description": "normal for send transaction normaly",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/feemanagment"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/allfees/withdraw/{uuid}": {
      "get": {
        "tags": [
          "Fees Managment Withdraw",
          "Dashboard Endpoint"
        ],
        "summary": "get all company fees percent for withdraw requests",
        "description": "",
        "operationId": "allfee1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/feemanagment"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/updatefees/withdraw": {
      "put": {
        "tags": [
          "Fees Managment Withdraw",
          "Dashboard Endpoint"
        ],
        "summary": "update company fees percent for withdraw requests",
        "description": "",
        "operationId": "updatefee1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "fastplus",
            "in": "query",
            "description": "Fastplus for send transaction rapidly+",
            "type": "string"
          },
          {
            "name": "fast",
            "in": "query",
            "description": "Fast for send transaction rapidly",
            "type": "string"
          },
          {
            "name": "medium",
            "in": "query",
            "description": "medium for send transaction little be fast",
            "type": "string"
          },
          {
            "name": "normal",
            "in": "query",
            "description": "normal for send transaction normaly",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/feemanagment"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/createfees/sendtransaction": {
      "post": {
        "tags": [
          "Fees Managment send transaction",
          "Dashboard Endpoint"
        ],
        "summary": "Add company fees for send transaction requests",
        "description": "",
        "operationId": "createfee2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "fastplus",
            "in": "query",
            "description": "Fastplus for send transaction rapidly+",
            "required": true,
            "type": "string"
          },
          {
            "name": "fast",
            "in": "query",
            "description": "Fast for send transaction rapidly",
            "required": true,
            "type": "string"
          },
          {
            "name": "medium",
            "in": "query",
            "description": "medium for send transaction little be fast",
            "required": true,
            "type": "string"
          },
          {
            "name": "normal",
            "in": "query",
            "description": "normal for send transaction normaly",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/feemanagment"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/allfees/sendtransaction/{uuid}": {
      "get": {
        "tags": [
          "Fees Managment send transaction",
          "Dashboard Endpoint"
        ],
        "summary": "get all company fees percent for send transaction requests",
        "description": "",
        "operationId": "allfee2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/feemanagment"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/updatefees/sendtransaction": {
      "put": {
        "tags": [
          "Fees Managment send transaction",
          "Dashboard Endpoint"
        ],
        "summary": "update company fees percent for send transaction requests",
        "description": "",
        "operationId": "updatefee2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "fastplus",
            "in": "query",
            "description": "Fastplus for send transaction rapidly+",
            "type": "string"
          },
          {
            "name": "fast",
            "in": "query",
            "description": "Fast for send transaction rapidly",
            "type": "string"
          },
          {
            "name": "medium",
            "in": "query",
            "description": "medium for send transaction little be fast",
            "type": "string"
          },
          {
            "name": "normal",
            "in": "query",
            "description": "normal for send transaction normaly",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/feemanagment"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/company/getallfees": {
      "get": {
        "tags": [
          "Fees Managment Withdraw",
          "Dashboard Endpoint"
        ],
        "summary": "Get all company fees collect",
        "description": "",
        "operationId": "companysfee1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          }
          ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/companyallfee"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/crypto/allcrypto": {
      "get": {
        "tags": [
          "Dashboard Endpoint"
        ],
        "summary": "Get all crypto available on this platform",
        "description": "",
        "operationId": "allcrypto1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "user uuid need to be add in the url request",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          }
          ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/allcrypto"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/momo/convert/{currency}": {
      "get": {
        "tags": [
          "MOMO Endpoint"
        ],
        "summary": "Convert usd value to a local currency value",
        "description": "",
        "operationId": "convert1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "currency",
            "in": "path",
            "description": "This is the local currency symbol you want to get",
            "required": true,
            "type": "string"
          },
          {
            "name": "value_usd",
            "in": "query",
            "description": "This is the dollar value you want to convert in local currency",
            "type": "double"
          }
          ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/convert"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/momo/getpayment/methods": {
      "get": {
        "tags": [
          "MOMO Endpoint"
        ],
        "summary": "get all payment methods",
        "description": "",
        "operationId": "method1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/method1"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/momo/payment/available/{country}": {
      "get": {
        "tags": [
          "MOMO Endpoint"
        ],
        "summary": "get payment method available for a country",
        "description": "",
        "operationId": "method2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "country",
            "in": "path",
            "description": "country for check payment method available",
            "required": true,
            "type": "string"
          }
          ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/method2"
              }
            }
          },
          "401": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/twilio/otp/request": {
      "get": {
        "tags": [
          "Twilio Endpoint"
        ],
        "summary": "Request for send OTP NUMBER",
        "description": "",
        "operationId": " twiliorequest",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "phone",
            "in": "query",
            "description": "You need to pass the phone number",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/twilio2"
              }
            }
          },
          "500": {
            "description": "Invalid status value",
            "schema": {
              "items": {
                "$ref": "#/definitions/twilioeror1"
              }
            }
          }
        }
      }
    },
    "/twilio/verify": {
      "get": {
        "tags": [
          "Twilio Endpoint"
        ],
        "summary": "Request for verify number",
        "description": "",
        "operationId": " twilioverify",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "You needs to pass the OTP code the user type.",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/twilio1"
              }
            }
          },
          "500": {
            "description": "Invalid status value",
            "schema": {
              "items": {
                "$ref": "#/definitions/twilioeror1"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "createwallets": {
      "type": "object",
      "properties": {
        "status" : 
        {
          "type": "integer",
          "example": 200
        },
        "message": {
          "type":"string",
          "example": "successfully"
        },
        "wallet" :
        {
          "type": "object",
          "example": 
          {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "crypto_name": {
              "type": "string",
              "example": "bitcoin"
            },
            "pubkey": {
              "type": "string",
              "example" : "0x.."
            },
            "privkey": {
              "type": "string",
              "example" : "0x.."
            },
            "mnemonic": {
              "type": "string",
              "example" : "my me too"
            },
            "updatedAt": {
              "type": "datetime",
              "example" : "2021-08-05T18:21:33.296Z"
            },
            "createdAt": {
              "type": "datetime",
              "example" : "2021-08-05T18:21:33.296Z"
            }
          }
         
        }
      }
    },
    "walletaddress": {
      "type": "object",
      "properties": {
        "status" : {
          "type": "integer",
          "example": "200"
        },
        "address" : {
          "type": "string",
          "example": "0x.."
        }
      }
    },
    "accountbalance": {
      "type": "object",
      "properties": {
        "balance" : {
          "type": "double",
          "example": "0.004"
        }
      }
    },
    "sendtransaction": {
      "type": "object",
      "properties": {
        "status" : 
        {
          "type": "integer",
          "example": 200
        },
        "message": {
          "type":"string",
          "example": "successfully"
        }
       
      }
    },
    "alltransaction": {
      "type": "object",
      "properties": {
        "status" : 
        {
          "type": "integer",
          "example": 200
        },
        "message": {
          "type":"string",
          "example": "successfully"
        },
        "data" :
        {
          "type": "array",
          "example": 
          [{
            "id": 1,
            "crypto_name": "ethereum",
            "transaction_type": "send",
            "hash": "0x40eb1caad438fce5aec593864d04b25bc50f5623575f703075a5d54e1e22d30a",
            "amount": "0.01",
            "fees": 0.003356,
            "amount_usd": null,
            "fees_usd": null,
            "amount_currency": null,
            "currency": null,
            "country": null,
            "from": "0xaC5ab679D5aaC1d0c8C3f8168fBfeb15A3A7CcC5",
            "to": "0xcbe68f0486A369b37d99E4BEfF35B0Ca83062542",
            "confirmation": false,
            "user_uuid": "22aba468-294b-4b17-82be-e046187ae7e2",
            "updatedAt": "2021-11-19T20:43:33.618Z",
            "createdAt": "2021-11-19T20:43:33.618Z"
          }]
        }
      }
    },
    "transaction": {
      "type": "object",
      "properties": {
        "status" : 
        {
          "type": "integer",
          "example": 200
        },
        "message": {
          "type":"string",
          "example": "successfully"
        },
        "data" :
        {
          "type": "object",
          "example": 
          {
            "id": 1,
            "crypto_name": "ethereum",
            "transaction_type": "send",
            "hash": "0x40eb1caad438fce5aec593864d04b25bc50f5623575f703075a5d54e1e22d30a",
            "amount": "0.01",
            "fees": 0.003356,
            "amount_usd": null,
            "fees_usd": null,
            "amount_currency": null,
            "currency": null,
            "country": null,
            "from": "0xaC5ab679D5aaC1d0c8C3f8168fBfeb15A3A7CcC5",
            "to": "0xcbe68f0486A369b37d99E4BEfF35B0Ca83062542",
            "confirmation": false,
            "user_uuid": "22aba468-294b-4b17-82be-e046187ae7e2",
            "updatedAt": "2021-11-19T20:43:33.618Z",
            "createdAt": "2021-11-19T20:43:33.618Z"
          }
        }
      }
    },
    "txnumber": {
      "type": "object",
      "properties": {
        "status" : 
        {
          "type": "integer",
          "example": 200
        },
        "message": {
          "type":"string",
          "example": "successfully"
        },
        "data" :
        {
          "type": "integer",
          "example": {
            "txnumber" : 221
          }
        }
      }
    },
    "feemanagment": {
      "type": "object",
      "properties": {
        "status" : 
        {
          "type": "integer",
          "example": 200
        },
        "message": {
          "type":"string",
          "example": "successfully"
        },
        "data" :
        {
          "type": "object",
          "example": 
          {
            "fees_type": {
              "type": "string",
              "example" : "withdraw"
            },
            "fastplus": {
              "type": "string",
              "example" : "0.23"
            },
            "fast": {
              "type": "string",
              "example" : "0.12"
            },
            "medium": {
              "type": "string",
              "example" : "0.01"
            },
            "normal": {
              "type": "string",
              "example" :"0.012"
            },
            "updatedAt": {
              "type": "datetime",
              "example" : "2021-08-05T18:21:33.296Z"
            },
            "createdAt": {
              "type": "datetime",
              "example" : "2021-08-05T18:21:33.296Z"
            }
          }
        }
      }
    },
    "companyallfee": {
      "type": "object",
      "properties": {
        "status" : 
        {
          "type": "integer",
          "example": 200
        },
        "message": {
          "type":"string",
          "example": "successfully"
        },
        "data" :
        {
          "type": "object",
          "example": 
          {
            "bitcoin": {
              "btcfees" : 0.01,
              "symbol" : "BTC"
            },
            "ethereum": {
              "btcfees" : 0.01,
              "symbol" : "ETH"
            },
            "simbcoin": {
              "smbfees" : 0.01,
              "symbol" : "SMB"
            },
            "tether": {
              "usdtfees" : 0.01,
              "symbol" : "USDT"
            }
          }
        }
      }
    },
    "allcrypto": {
      "type": "object",
      "properties": {
        "status" : 
        {
          "type": "integer",
          "example": 200
        },
        "message": {
          "type":"string",
          "example": "successfully"
        },
        "data" :
        {
          "type": "object",
          "example": 
          {
            "crypto_name": {
              "type": "string",
              "example" : "bitcoin"
            },
            "updatedAt": {
              "type": "datetime",
              "example" : "2021-08-05T18:21:33.296Z"
            },
            "createdAt": {
              "type": "datetime",
              "example" : "2021-08-05T18:21:33.296Z"
            }
          }
        }
      }
    },
    "estimatefees": {
      "type": "object",
      "properties": {
        "status": {
          "type":"integer",
          "example": 200
        },
        "message": {
          "type":"string",
          "example": "Fees Managment Get With Success"
        },
        "data": {
          "type": "object",
          "example": {
            "fastplus": {
              "type":"double",
              "example": 0.0233
            },
            "fast": {
              "type":"double",
              "example": 0.0013
            },
            "medium": {
              "type":"double",
              "example": 0.00013
            },
            "normal": {
              "type":"double",
              "example": 0.00010
            }
          }
        }
      }
    },
    "twilio1": {
      "type": "object",
      "properties": {
        "status": {
          "type":"integer",
          "example": 200
        },
        "message": {
          "type": "string",
          "example": "Verification done successfully!"
        }
      }
    },
    "convert": {
      "type": "object",
      "properties": {
        "status": {
          "type":"integer",
          "example": 200
        },
        "message": {
          "type": "string",
          "example": "all payment!"
        },
        "data" :
        {
          "type" : "object",
          "example": [
            {
              "currency": "XAF",
              "amount": 2310.4
            }
          ]
          
        }
      }
    },
    "method1": {
      "type": "object",
      "properties": {
        "status": {
          "type":"integer",
          "example": 200
        },
        "message": {
          "type": "string",
          "example": "all payment!"
        },
        "data" :
        {
          "type" : "array",
          "example": [
            {
              "id": 1,
              "country": "cameroun",
                "symbol": "CM",
                "currency": "XAF",
                "channel": [
                  "CM_ORANGEMONEY",
                  "CM_MTNMOBILEMONEY",
                  "CM_EUMM"
                ],
                "operator": [
                  "ORANGE MONEY",
                  "MTN MOBILE MONEY",
                  "EXPRESS UNION"
                ],
                "createdAt": "2021-11-19T11:50:01.000Z",
                "updatedAt": "2021-11-19T11:50:01.000Z"
            }
          ]
          
        }
      }
    },
    "method2": {
      "type": "object",
      "properties": {
        "status": {
          "type":"integer",
          "example": 200
        },
        "message": {
          "type": "string",
          "example": "all payment!"
        },
        "data" :
        {
          "type" : "object",
          "example": 
            {
              "id": 1,
              "country": "cameroun",
              "symbol": "CM",
              "currency": "XAF",
              "channel": [
                "CM_ORANGEMONEY",
                "CM_MTNMOBILEMONEY",
                "CM_EUMM"
              ],
              "operator": [
                "ORANGE MONEY",
                "MTN MOBILE MONEY",
                "EXPRESS UNION"
              ],
              "createdAt": "2021-11-19T11:50:01.000Z",
                "updatedAt": "2021-11-19T11:50:01.000Z"
            }
          
          
        }
      }
    },
    "twilio2": {
      "type": "object",
      "properties": {
        "status": {
          "type":"integer",
          "example": 200
        },
        "code": {
          "type": "string",
          "example": "002001"
        },
        "message": {
          "type": "string",
          "example": "OTP code send successfully!"
        }
      }
    },
    "twilioeror1": {
      "type": "object",
      "properties": {
        "status": {
          "type":"integer",
          "example": 500
        },
        "message": {
          "type": "string",
          "example": "Openration Failed"
        }
      }
    }
    
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "#"
  }
}